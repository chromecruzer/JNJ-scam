const express=require("express"),path=require("path"),multer=require("multer"),nodemailer=require("nodemailer"),dotenv=require("dotenv"),fs=require("fs");dotenv.config();const app=express(),port=process.env.PORT||3e3,storage=multer.diskStorage({destination:function(e,s,r){r(null,"./public/uploads")},filename:function(e,s,r){r(null,s.originalname)}}),upload=multer({storage:storage}),transporter=nodemailer.createTransport({service:"Gmail",auth:{user:process.env.GMAIL_USER,pass:process.env.GMAIL_PASS}});function clearUploadsDirectory(e){const s=path.resolve(__dirname,e);fs.readdir(s,((e,r)=>{if(e)console.error("Error reading directory:",e);else{for(const e of r){const r=path.join(s,e);fs.stat(r,((s,o)=>{s?console.error(`Error getting file stats for ${e}:`,s):o.isFile()&&fs.unlink(r,(s=>{s?console.error(`Error deleting file ${e}:`,s):console.log(`Deleted file: ${r}`)}))}))}console.log("Uploads directory cleared")}}))}app.use(express.json()),app.use(express.urlencoded({extended:!0})),app.use(express.static(path.join(__dirname,"public"))),app.set("view engine","pug"),app.set("views","./views"),app.use(express.static("public")),app.use(express.json()),app.get("/",((e,s)=>{s.render("index")})),app.post("/submit",upload.fields([{name:"proof",maxCount:1},{name:"screenshots",maxCount:5}]),(async(e,s)=>{const{name:r,gender:o,email:n,complaint:a}=e.body,t=e.files.proof[0],i=e.files.screenshots||[];if(!(r&&o&&n&&a&&t))return s.status(400).send("Please provide name, gender, email, complaint, and proof");const p={from:process.env.GMAIL_USER,to:process.env.GMAIL_RECIPIENT,subject:`Form submission regarding JNJ company complaint from ${r}`,text:`\n      Name: ${r}\n      Gender: ${o}\n      Email: ${n}\n      Complaint: ${a}\n    `,attachments:[{filename:t.originalname,path:t.path},...i.map((e=>({filename:e.originalname,path:e.path})))]};try{await transporter.sendMail(p),console.log("Message sent successfully"),s.redirect("/"),clearUploadsDirectory("./public/uploads")}catch(e){console.error("Failed to send message:",e),s.status(500).send("Failed to send message")}})),app.listen(port,(()=>{console.log(`Server is running at http://localhost:${port}`)}));